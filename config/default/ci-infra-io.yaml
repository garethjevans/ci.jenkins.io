---
rbac:
  readSecrets: true
persistence:
  enabled: true
  size: 100Gi
controller:
  tag: "2.263.1-lts"
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      no-executors: |
        jenkins:
          numExecutors: 2

      matrix-settings: |
        jenkins:
          authorizationStrategy:
            globalMatrix:
              permissions:
                - "Overall/Administer:admin"
                - "Overall/SystemRead:authenticated"
                - "Overall/Read:authenticated"
                - "Agent/ExtendedRead:authenticated"
                - "Job/ExtendedRead:authenticated"
                - "Overall/Read:anonymous"
                - "Job/Read:anonymous"
                - "View/Read:anonymous"

      security-realm: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "admin"
                  password: "p4ssw0rd"

      misc-jenkins: |
        jenkins:
          remotingSecurity:
            enabled: true
          slaveAgentPort: 50000

      system-message: |
        jenkins:
          systemMessage: |
            <div>
              <h1>About ci.jenkins.io</h1>
              <p>This instance hosts several <a href="https://plugins.jenkins.io/github-branch-source">GitHub Organization folders</a> organized by subject area.</p>
              <p>To add continuous integration and PR builds for a Jenkins plugin in the <code>jenkinsci</code> organization,
              just add a <a href="https://jenkins.io/doc/book/pipeline/jenkinsfile/"><code>Jenkinsfile</code></a> to your repository.
              You'll likely only need one line:</p>
              <pre>    buildPlugin()</pre>
              <p>Learn more:</p>
              <ul>
                <li><a href="https://jenkins.io/projects/infrastructure/#jenkins">About the Jenkins infrastructure project</a></li>
                <li><a href="https://github.com/jenkins-infra/documentation/blob/master/ci.adoc#jenkins-on-jenkins">Infrastructure documentation: ci.jenkins.io</a></li>
                <li><a href="https://github.com/jenkins-infra/pipeline-library#pipeline-global-library">Infrastructure documentation: Pipeline library</a></li>
                <li><a href="https://github.com/jenkins-infra/charts/blob/master/config/cijenkinsio/jenkins.yaml">configuration-as-code for ci.jenkins.io</a></li>
              </ul>
            </div>

      markup-formatter: |
        jenkins:
          markupFormatter:
            rawHtml:
              disableSyntaxHighlighting: false

      crumb-issuer: |
        jenkins:
          crumbIssuer:
            standard:
              excludeClientIPFromCrumb: true

      misc-security: |
        security:
          apiToken:
            creationOfLegacyTokenEnabled: false
            tokenGenerationOnCreationEnabled: false
            usageStatisticsEnabled: true

      misc-unclassified: |
        unclassified:
          appInsightsGlobalConfig:
            appInsightsEnabled: false
          gitSCM:
            createAccountBasedOnEmail: false
            globalConfigEmail: "oscar@example.com"
            globalConfigName: "oscar"
          pipeline-model-docker:
            dockerLabel: "docker"
          pollSCM:
            pollingThreadCount: 10
          timestamper:
            allPipelines: true

      jobs-settings: |
        jobs:
          - script: >
              def configuration = [
                [
                  name        : "Core",
                  repositories: "test-repo*",
                  excludes    : "",
                  trust       : "TrustContributors"
                ]
              ]

              configuration.each { jobConfig ->
                def config = [
                  displayName: jobConfig.name,
                  owner      : "garethjevans-test",
                  excludes   : "",
                  trust      : "TrustPermission"
                ] << jobConfig

                organizationFolder(config.name) {
                  displayName(config.displayName)
                  organizations {
                    github {
                      repoOwner(config.owner)
                      apiUri("https://api.github.com")
                      credentialsId("github-access-token")

                      traits {
                        gitHubTagDiscovery()
                        cloneOptionTrait {
                          extension {
                            shallow(false)
                            noTags(false)
                            reference('')
                            timeout(10)
                            honorRefspec(true)
                          }
                        }
                      }
                    }
                  }
                  projectFactories {
                    workflowMultiBranchProjectFactory {
                      scriptPath("Jenkinsfile")
                    }
                  }
                  // don't keep build jobs for deleted branches
                  orphanedItemStrategy {
                    discardOldItems {
                      numToKeep(-1)
                    }
                  }
                  buildStrategies {
                    buildTags {
                      atLeastDays("0")
                      atMostDays("7")
                    }
                  }
                  configure { node ->
                    def traits = node / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                    traits << 'jenkins.scm.impl.trait.WildcardSCMSourceFilterTrait' {
                      includes(config.repositories)
                      excludes(config.excludes)
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                      strategyId(1)
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                      strategyId(1)
                    }
                    traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                      strategyId(1)
                      trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$' + config.trust)
                    }
                    traits << 'net.gleske.scmfilter.impl.trait.WildcardSCMHeadFilterTrait' {
                      includes('main master PR-*')
                      excludes()
                      tagIncludes('*')
                      tagExcludes()
                    }
                    traits << 'org.jenkinsci.plugins.github.label.filter.PullRequestLabelsBlackListFilterTrait' {
                      labels('on-hold ci-skip')
                    }
                  }
                }
              }
          - script: >
              multibranchPipelineJob('ci.jenkins.io') {
                displayName "ci.jenkins.io"
                branchSources {
                  github {
                    id('2020120401')
                    scanCredentialsId('github-access-token')
                    repoOwner('garethjevans')
                    repository('ci.jenkins.io')
                  }
                }
                factory {
                  workflowBranchProjectFactory {
                    scriptPath('Jenkinsfile')
                  }
                }
                // don't keep build jobs for deleted branches
                orphanedItemStrategy {
                  discardOldItems {
                    numToKeep(-1)
                  }
                }
                configure { node ->
                  def traits = node / 'sources' / 'data' / 'jenkins.branch.BranchSource' / 'source' / 'traits'
                  traits << 'org.jenkinsci.plugins.github__branch__source.BranchDiscoveryTrait' {
                    strategyId(1)
                  }
                  traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                    strategyId(1)
                  }
                  traits << 'org.jenkinsci.plugins.github__branch__source.ForkPullRequestDiscoveryTrait' {
                    strategyId(1)
                    trust(class: 'org.jenkinsci.plugins.github_branch_source.ForkPullRequestDiscoveryTrait$TrustContributors')
                  }
                  traits << 'net.gleske.scmfilter.impl.trait.WildcardSCMHeadFilterTrait' {
                    includes('main master PR-*')
                    excludes()
                    tagIncludes('*')
                    tagExcludes()
                  }
                  traits << 'org.jenkinsci.plugins.github.label.filter.PullRequestLabelsBlackListFilterTrait' {
                    labels('on-hold ci-skip')
                  }
                }
              }
      pipeline-library: |
        unclassified:
          globalLibraries:
            libraries:
              - defaultVersion: "master"
                implicit: true
                name: "pipeline-library"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        id: "github-access-token"
                        remote: "https://github.com/jenkins-infra/pipeline-library.git"
      location: |
        unclassified:
          location:
            adminAddress: "nobody@jenkins.io"
            url: "https://ci.jenkins.io"

      k8s-settings: |
        jenkins:
          clouds:
            - kubernetes:
                containerCapStr: "100"
                jenkinsTunnel: "jenkins-agent:50000"
                jenkinsUrl: "http://jenkins:8080"
                maxRequestsPerHostStr: "300"
                name: "kubernetes"
                namespace: "jenkins"
                podRetention: "Never"
                serverUrl: "https://kubernetes.default"
                podLabels:
                  # Required to be jenkins/<helm-release>-jenkins-slave as definede here
                  # https://github.com/helm/charts/blob/ef0d749132ecfa61b2ea47ccacafeaf5cf1d3d77/stable/jenkins/templates/jenkins-master-networkpolicy.yaml#L27
                  - key: "jenkins/jenkins-agent"
                    value: "true"
                templates:
                  - name: jnlp-linux
                    nodeSelector: "kubernetes.io/os=linux"
                    containers:
                      - name: jnlp
                        image: "jenkins/inbound-agent:latest-jdk11"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"
                        resourceRequestCpu: "500m"
                        resourceRequestMemory: "512Mi"
                        args: "^${computer.jnlpmac} ^${computer.name}"
                        alwaysPullImage: true
                    yaml: |-
                      spec:
                        tolerations:
                        - key: "os"
                          operator: "Equal"
                          value: "windows"
                          effect: "NoSchedule"

  overwritePlugins: true
  installPlugins:
    - ansicolor:0.7.3
    - antisamy-markup-formatter:2.1
    - authentication-tokens:1.4
    - azure-container-agents:1.2.0
    - azure-vm-agents:1.5.1
    - basic-branch-build-strategies:1.3.2
    - blueocean:1.24.3
    - blueocean-autofavorite:1.2.4
    - blueocean-commons:1.24.3
    - blueocean-config:1.24.3
    - blueocean-core-js:1.24.3
    - blueocean-dashboard:1.24.3
    - blueocean-display-url:2.4.0
    - blueocean-events:1.24.3
    - blueocean-git-pipeline:1.24.3
    - blueocean-github-pipeline:1.24.3
    - blueocean-i18n:1.24.3
    - blueocean-jira:1.24.3
    - blueocean-jwt:1.24.3
    - blueocean-personalization:1.24.3
    - blueocean-pipeline-api-impl:1.24.3
    - blueocean-pipeline-editor:1.24.3
    - blueocean-pipeline-scm-api:1.24.3
    - blueocean-rest:1.24.3
    - blueocean-rest-impl:1.24.3
    - blueocean-web:1.24.3
    - branch-api:2.6.2
    - build-name-setter:2.1.0
    - cloud-stats:0.26
    - config-file-provider:3.7.0
    - configuration-as-code:1.46
    - credentials:2.3.14
    - credentials-binding:1.24
    #    - datadog:2.6.0
    - ec2:1.56
    - embeddable-build-status:2.0.3
    - extended-read-permission:3.2
    - git:4.5.2
    - git-client:3.6.0
    - github:1.32.0
    - github-api:1.117
    - github-autostatus:3.6.2
    - github-branch-source:2.9.3
    - github-checks:1.0.8
    - github-label-filter:1.0.0
    - groovy:2.3
    - inline-pipeline:1.0.1
    - javadoc:1.6
    - jira:3.1.3
    - job-dsl:1.77
    - junit:1.48
    - kubernetes:1.28.5
    - kubernetes-credentials:0.7.0
    - kubernetes-credentials-provider:0.15
    - ldap:1.26
    - lockable-resources:2.10
    - matrix-auth:2.6.4
    - matrix-project:1.18
    - metrics:4.0.2.7
    - pipeline-build-step:2.13
    - pipeline-github:2.7
    - pipeline-graph-analysis:1.10
    - pipeline-input-step:2.12
    - pipeline-milestone-step:1.3.1
    - pipeline-model-api:1.7.2
    - pipeline-model-definition:1.7.2
    - pipeline-model-extensions:1.7.2
    - pipeline-rest-api:2.19
    - pipeline-stage-step:2.5
    - pipeline-stage-tags-metadata:1.7.2
    - pipeline-stage-view:2.19
    - pipeline-utility-steps:2.6.1
    - plain-credentials:1.7
    - prometheus:2.0.8
    - scm-api:2.6.4
    - scm-filter-branch-pr:0.5.1
    - script-security:1.75
    - ssh-agent:1.20
    - ssh-credentials:1.18.1
    - support-core:2.72
    - timestamper:1.11.8
    - token-macro:2.13
    - toolenv:1.2
    - variant:1.4
    - warnings-ng:8.6.0
    - workflow-aggregator:2.6
    - workflow-api:2.40
    - workflow-basic-steps:2.23
    - workflow-cps:2.87
    - workflow-cps-global-lib:2.17
    - workflow-durable-task-step:2.37
    - workflow-job:2.40
    - workflow-multibranch:2.22
    - workflow-scm-step:2.11
    - workflow-step-api:2.23
    - workflow-support:3.7

  ingress:
    enabled: true
